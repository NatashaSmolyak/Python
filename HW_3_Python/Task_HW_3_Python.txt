#1. Дано 2 скрипта. Объяснить ошибки.
a = None
if len(a) > 0 or a is not None:
    print('OK')
    print('Length =', len(a))
#1.2
a = None
if a is not None and len(a) > 0:
    print('OK')
    print('Length =', len(a))

Результат
if len(a) > 0 or a is not None:
    ^^^^^^
TypeError: object of type 'NoneType' has no len()

# =============================
#2. Добавить слово в конец списка так, чтобы каждая буква стала отдельным элементом списка
# l = [1, 2, 3]
# a = 'abc'
# result = [1, 2, 3, 'a', 'b', 'c']

# =============================
# 3. Все чётные числа вывести в другой список
# l = [1,3,4,5,8,9,10,44,22,50,79,54,28,91]

# =============================
# 4. Все emails у которых есть слово test вывести в другой список
# l = ['webtest1@gmail.com',
#      'alex_dr5@gmail.com',
#      'elena_viktorovna@gmail.com',
#      'infotest@gmail.com',
#      'sigmatesst@gmail.com',
#      'planet.dollsatest@gmail.com',
#      'loadtestsinfo@gmail.com',
#      'straightwaytest@gmail.com',
#      'test.of.tests@gmail.com',
#      'bigmac@gmail.com',
#      'bigmactest@gmail.com',
#      'kfc_test_supply@gmail.com',
#      'cyberdesk@gmail.com',
#      'supportonlinetest@gmail.com'
#      ]
# =============================
# 5 найти самое маленькое число в списке
# l = [3,0,4,5,8,9,10,44,22,50,-1,79,54,-28,91]

# =============================
# 6. Сравнить 2 строки без учёта регистра
# =============================
# 7. Проверить является ли массив подмножеством другого массива
# l1 = [1,4,6]
# l2 = [9,5,1,10,4,33,2,6,0,8]

# =============================
# 8. Напишите функцию, которая принимает строку и возвращает количество букв английского алфавита, которые встречаются больше чем 1 раз.

# =============================
# 9. Напишите функцию, которая принимает строки.
# Она должна вернуть False, если в строке содержится две одинаковые буквы,
# а если таких слов нет — True.

# no_duplicate_letters("Здравствуйте, Александра") ? False
# Две в в «Здравствуйте», три a в «Александра».

# no_duplicate_letters("Всегда дожимай до конца") ? True
# Две в в «Здравствуйте», три a в «Александра».

# =============================
#10. Напишите функцию, которая проверяет сложность пароля. Функция проверяет ряд условий и оценивает сложность пароля. За каждое выполненое условие пароль получает бал.
#
# Если выполняется одно условие - функция возвращает 1, если выполненяется 5 условий - функция вернет 5.
#
# Условия которые нужно проверить:
#
# длина пароля не меньше 6 символов,
# пароль содержит хотя бы 1 цифру,
# пароль содержит хотя бы одну заглавную букву,
# пароль содержит хотя бы одну строчную букву,
# пароль содержит хотя бы один из специальных символов: !@#$%^&*()-+
#
# Типы символов, которые будут содержаться в пароле во время тестирования:

# numbers = "0123456789"
# lower_case = "abcdefghijklmnopqrstuvwxyz"
# upper_case = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
# special_characters = "!@#$%^&*()-+"

# Пароль не должен содержать кириллических символов
